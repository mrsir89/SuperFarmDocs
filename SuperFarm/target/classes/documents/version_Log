2019.07.21

 project SuperFarm
 build date  2019.07.21

 log : 주말스터디 선생님 조언으로 순서잡고 시작단계

-------------------------------------------------

2019.07.21
Customer Contact 정보까지 추가 하기

기존 수정거 수정 사항

Model에 Signup 수정 SignupContact signupContact 추가
그래서 Json으로 넘어 올때
{
	"id": "tester24",
	"password" : "Test1234",
	"name": "프로젝트",
	"gender" : "남",
	"signupContact":{
	                        여기 사항이 SignupContact에 담겨 온다.
							"phone":"01077775465",
							"address":"서울시 강서구 ",
							"email":"test3@test.com"
						 }
}
SignupContact 추가
SignupContact에 Sigup 과 같은 형식으로 만듬


Service Signup 수정 사항

        // Json에 담겨온 SignupContact 형식을 클래스 담고
        SignupContact contact = signupCustomer.getSignupContact();

        // 이전 버전과 같이 customer를 먼저 저장 하고
        customerRepository.save(customer);
        // customer가 DB저장 하는 즉기 생기는 c_num 을 넘어온 c_id로 찾아와 tmp 에 넣어 주고
        Long tmp = customerRepository.findByCid(customer.getCid()).getCnum();
        // tmp에 저장된 지금 생성된 c_num을 contact에 넣어 주고
        contact.setCnum(tmp);
        // SignupContact에 담긴 내용을 CustomerContact에 넣어 주고
        CustomerContact customerContact  = contact.getContact();
        // CustomerRepository에 넣어 주면 완료
        customerContactRepository.save(customerContact);
        customer.setContact(customerContact)

UserDetailService 추가 사항

UserDetails 우리가 users/me로 실행 할때 principal을 받아와서 다시 customer로 리턴 받을때
실행되는 곳인데 여기에 Contact 내용을 추가 하지 않을경우에는  (대신 @JoinTable을 이용 하여 동시 조회하여 데이터를 가져올수는 있음)
Customer안에 Contact정보가 없기에 추가 사항
        // CustomerContact pk가 c_num 이므로 넘어온 customer의 cnum을 이용 하여 contact정보를 저장
        // customer의 cusotmerContact에 저장한다.
        Optional<CustomerContact> contact = customerContactRepository.findById(customer.getCnum());
        customer.setContact(contact.get());




## 2019. 08.13

스키마 변경으로 인한 전체적으로 수정
review 게시판 QnA 게시판 Page로 변경
Admin과 Customer 각각 분리 형태를 User로 통합적인 부분을 같이 쓰면서 User 에서 파생되어 나누어짐
