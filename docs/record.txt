6/23

토요일 정규 모임
@신촌 모아스터디룸
2시~8시, +저녁식사

스프링 프레임워크 들어가기 전,
기본 개념 잡고 가기
서블릿+JSP 
miniMVC, MSA,  등등 이야기.

각자 노트북에 개발환경 셋팅.

ps_
수진이 노트북 잦은 에러 = 4848 포트 already using
>>>>IntelliJ 재실행 여러번 반복 시도



6/24

자율

조별 스터디  스프링 책 받음.
각자 챕터1 공부할것.
( 이 안에 검색해봐야 할 용어, 개념 많음 )

수업예제 Simple 시도에 어려움 ( 포트충돌, 자바버젼, 등등 해결하기 ) 

상우형이 공유한 스프링예제(인프런-PetClinic) 한번씩 해볼것.






6/25


자율


전날 숙제 확인Ok

양희 - dao vo 정립
인선 - MVC. 서블릿 공부
수진 - MVC. 인텔리 구조로 미니플젝 구축
수윤 - 일본. petclinic예제, 인텔리제이 구축

나는 집가기 전까지 스프링으로 뭐든 만들어볼것.
>>>>>> 예제 따라하기 실패 -WAS문제?? 예상.
>>>>>> resources  경로 알 수 없음.

이어서 할것 + 다음날 준비
상우형- MVC 예제 코딩, 열혈강의 미니프레임웤
양희- 겟, 리플렉트,  열혈강의4장 
       인텔리제이. 책1-2장
수진- 열혈강의 예제 스프링부트 해봄
인선- 인텔리j 와 이클립스 책2장 MVC
수윤- 개념정리, 1장 2장 
ROK- IoC나 DI 개념 등- bean
강일 - 책 2장, 스프링예제.  숙제로 로그인, 데이터보기 시도하였으나 DB접속실패?

           




6/26


스터디—
전체 그룹 스터디
주말에 각 팀 맞추고  발표하면서 레퍼런스 맞춤
>>> 이해를 돕기 위함

*프로젝트 
>>> 매일매일 업데이트를 선생님께!
구현해야 할 머스트 피쳐를 뽑아서 정리.
must - 우선순위 높은
critical - 
requiered - 

데이터 설계 - 
아키텍쳐(시스템) 설계 - 

다른 비트캠프 발표로 아이디어 얻기

마일스톤 정하기 - 두 주 단위로? 

MVC를 준비해야...


매일 6시 30분 회의
전날 숙제 체크, 
당일 수업 체크,






6/27


내일 선생님 오후출근
>>>프로젝트 관련된 것


———오전———


유틸이라는 클래스를 만드는 사람과 쓰는사람,
두 사람이 스프링이라는 환경 안에서 어떻게 협업을 할 것인가?

스프링에서 지향하는것은 Component. 객체지향..
인터페이스!!
컴포넌트 기반의 프로그래밍, 라이브러리, 개발방법론 의 등장 - 하위버젼도 호환하고,
클래스에 대한 명세는 할필요가 없음. 인터페이스만!

동적바인딩 - 다이나믹하게 묶인다.. new () 로는 불가능.

프로토콜(인터페이스), 규약을 어떻게 만들것인가 - 인터페이스에만 집중하면 된다. 


interface DependencyObject {}

class DependencyObjectImpl implements DependencyObject {}

class SimpleService{
	private DependencyObject dependencyObject;
	public SimpleService(){
	}
	public SimpleService(DependencyObject dependencyObject){
		this.dependencyObject - dependencyObject;
	}
	public void setDependencyObject(DependencyObject dependencyObject){
		this.dependencyObject = dependencyObject;
	}
}


——실습———
어제와 달라진 것은  resources폴더를 만들었고, xml 정의하고,  new ClassPathXmlApplicationContext();를 썼다.
xml이든 어노테이션이든 컨테이너안에서 동작한다 주입한다, 어노테이션이나 xml을 보고.


어제와 다른 점
@Bean
public SimpleService getSimpleService(SimpleSequenceGenerator generator){ // 빈으로 생성된 인터페이스가 인자로 들어간다
    return new SimpleService(generator); // singleton을 유지할수 있느냐
}

IoC 컨테이너가 빈생성 주관. 컴포넌트 단위로 관리한다.
xml
= 
@annotation
= setter나 생성자로 인스턴스를 만들때  


merging 합병…  컴포넌트, 인터페이스, 실제의 디테일은 가린다. 


인터페이스는 변형되지 않아도  기능은 확장하여 변형하여 쓸 수 있다.그렇지만 인터페이스는 유지될수 있는것!

<팩토리-메소드 = 스테틱메서드>
팩토리 패턴 - 카피 온 라이트,  하나의 메모장을 두 프로세스가 참조하고 있을때 내용을 그대로 복사해서 클론하던지 새로 만들던지는 관여X
		복잡한 초기화 과정을 사용자에게 숨기고 싶다.


@Component 혹은   xml에 <Bean=~>  선언 두가진데
프로퍼티가 무조건 초기화가 되어야 하기 때문!!!!!!!!




——————— 오후 ———————

동기화객체  =  세마포, 뮤텍스 
동시성의 문제, ( 데드락, 프리징 )  멀티스레드 환경에서. =  해결하려면-   
쓰레드에서 슬립상태에서 시그널(이벤트루프)이 들어오면 깨어나서 작동
private Semaphore semaphore = new Semaphore(n개); //  n개 작동완료까지 대기


release() 가 thread에 붙어 있기 때문에 , 동시성 문제 발생 


Java8 에서 비동기로 확인이 가능하다 = CompletableFuture<String> result,   result.complete(“OK”);



람다식 
함수형 프로그래밍- 데이터를 변경시키지 않는다.




6/29

토요일
@신촌 베스트프렌드 스터디룸 2~9시

Github,
아이디어 회의 - 쇼핑몰(뭔가를 판매) , 카테고리 정리





7/1


인선 지각, 양희 결석

———오전———

 
1. 디펜던시 추가 ( MVC,  core )
2. 서블릿 선언(web.xml에다가.   빈 ) , 프론트 컨트롤러(이름이 디스패처 서블릿)
3. 컨피규레이션 로케이션이 ~ 이다. 선언(파람)
4. 맵핑 ( 각 서블릿 url 맵핑 ) 


*자바 웹 어플리케이션 아키텍쳐
모델1 = jsp 만 사용하는 모델.  빈을 핸들링, 모델을 핸들링. 페이지 안에 모든게 포함,
모델2 = 모델이 정보.데이터,  표현해 주는게 뷰.  흐름에 대한 제어가 컨트롤러. (기존에는 서블릿)
		프론트컨트롤러 - MVC는 라우터 개념. 분기 처리만 한다. 라우터 설정이 가능하다. 
		


유닛테스트 - 실제 스프링 환경이 아니다.
		어플리케이션컨텍스트 정보를 가져다 쓸 수 없다.
		각 스텝 하나하나를 유닛테스트 ( 정상인지 아닌지 확인하는것이 유닛테스트 ),  쭉 합친것은 통합테스트.



컨트롤러가 어떤 뷰를 쓸 것인지  선택한다.



base64방식?????
>>> http 에는 텍스트방식으로  그래서 바이너리(음악,사진등)를 전송하고 싶을 때.




백엔드 / 프론트엔드

프론트  = 리포지토리(서비스, 실제데이터 )에 접근해서 디비를 가져오는 방식과 ,
	 실제로 엔티티 모델에는 관심이 없다.

로직을 짜는 코드와 엔티티 코드와는 상이할 수 있다. >>  




7/2


회의내용 = 반복합시다.


——————오전 —————5. 
스프링부트로 기본 셋업을 한다 
<디펜던시>

DB 까지 연결 할 것 ( 어플리케이션 프로퍼티)

>>>>>> 각자 컴터에서 실행 될 수 있도록 *환경을 맞춘다

엔티티 모델 하나 (유저면 유저)  를 셋업한다

레포지토리(유저)  -  테스트 할 수 있게 하나씩

Test


깃 클로닝 -브랜치를 나눈다,    로컬브랜치(각자)



백과 프론트
백으로 바탕이 되어야 전달교육
프론트 미리 
도큐먼트 준비

어제 SimpleWeb2 이어서 Todo 추가


—————오후—————

참조 하는 방향? 관계?
TodoController -> TodoService -> TodoRepository    => CRUDRepository 참조한다

컨트롤러는 될수있으면 인/아웃풋만 결정
비즈니스 로직은 서비스에! (실제 데이터가 들어가서 처리되는것은)


————————게시판 만들기————————
id,
title
description


1. 게시판 자체를 추가
2. 댓글을 달 수 있게끔(데이터가 하나 더)


Article(String id, title, message, count, user_id),
 User(String id, userName,Password, name)
UserGroup(public enum  ADMIN, USER)

ArticleController (CRUD)
UserController(CRUD) create, read, update, delete


플젝 만들고
모델 추가하고
컨트롤러 두개 만들고………….
디펜던시를 넣고,
웹.엑스엠엘,  디스팻처서블릿 설정 , 컨피규 로케이션을 설정한다
디스패쳐서블릿 .

이거 되어야 Data ORM  할 수 있다.





7/3


DB에 연결하는 방법 - xml, annotation, 프로퍼티,
스프링부터의 장점은 standalone으로 바로 뜬다. 가볍다. 빠르다.
다음주면 스프링부트-전부 @어노테이션

컴포넌트 는 클래스 / 빈은 인스턴스화 하기 위한-


오늘은 
Spring5.0 MVC + JPA + Hibernate + CrudRepository(기능이 좋음) + XML JDBC Connection Configuration


노드가 비동기?? 싱글스레드..

입력과 수정의 구분
입력일땐 id가 없을것이다





7/8


—프로젝트 관련—
프론트단 - 탬플릿을 이용한다. 분해 적용 다 할 수 있도록

테이블 = featured 1, 2, 3…
이 안에서 마일스톤 나눌것, 단계별로….
고객관리등등,..  만들어내는 일을 쪼갤것,


서비스 별로 피쳐
피쳐안에 펑션…    
>>>>> 패키지로
must  - recommend - optional


RESTful API  뽑고  DB 설계 끝나면 endpoint 만들어야 한다 (ex_ /orders..) 메소드 분리, > 결과를 스키마에서 뽑아내야 한다
endpoint(도메인/customers…) 하나에 CRUD가 들어가야한다  resource.



시스템 설계
모놀리딕으로 짜는데 최대한 백/프론트 분리하여
REST서버를 짜자 =API  설계 하는데 DB 가 기반?
인증은 스프링을 하는데 -           클라이언트 -토큰을 얻어온다> Authorization Server 

*기술 참고 검색
OAuth 2.0





7/19


* 현재상황   데이터 테이블 16개 정도 나옴 -  추가 가능  >> 변경사항 따라서  OAuth2.0관련 공부중(로그인, 인증, 권한 나누기) 유저별로 등급 나눔, 관리자별로 등급 나눔  
* 다음계획  프론트/백 나눠서 역할 분담, 디비 다같이 공유  
* 체인지 만물상 >>> 한가지 테마 


이메일(혹은 문자) 은 노티피케이션이 기본으로 있어야 한다. - - 컨펌기능을 꼭???????

로그인이 안된 상태에서 서비스를 제공하는 상태 체크 필요

결제 시스템 따라서는 사용자와의 계약, 위약 관련 디테일 프로세서 필요
terms and conditions…



이미 있는데  우리만의 강점은??=농민이 직접운영
세금문제는 누구에게? 파는  농민 (관리자)



@@ 
엔티티 나오면 스키마
스키마에서 개발하는거

엔티티 모델 나오면 에스큐엘에서 하는거보다 스프링에서 리팩토링하는걸로 검증하는게 좋을듯
프레임워크 백앤드에서 자바관련 작업 시작하는게 좋을듯
하나씩 빌드업해야한다.

인증모델 - 선생님께 여쭐것

깃에 소스 레파지토리 하나 만들어서
선생님 초대해서 비트버켓 - 프라이빗프로젝트하면 여러명 가능

분업이 중요한데, 조사를 해도 좋고 각자 일할 수 있는 부분 영역이 있어야 겠다

그룹스터디 = 단체협의, 다음주계획 잡을것  TO-DO 관리, 

대신하는게 아니라 ‘같이’ 해야하는것이다.
(ex_둘씩 똑같은 비중으로 맡을것)


* 패치 api로 백과 프론트 연결하기


화면 레이아웃을 그려야 한다
서비스 (카테고리) 는 나와있다는 가정하에…..

환불요청에 관한 프로세서 (클레임 대비 당연히 있어야) - 클레임객체,필드.

상품들 유통기한 생산일자,, 넘버링,, 


유저에서 클라이언트크레덴셜 요구 클라이언트아이디, 시크릿 주고

그럼 서버에서 토큰을 준다

토큰이 있는지 체크(토큰이 없다는 가정, 있으면 있는토큰 쓴다)

토큰을 받으면 토큰+어떤유알엘  
근데 401 권한없으면  클라이언트에서 리다이렉트


“api설계” 가 되면 mockup데이터를 만들수 있다(json형태)





7/21


스프링부트로 기본 셋업을 한다 
<디펜던시>

DB 까지 연결 할 것 ( 어플리케이션 프로퍼티)

>>>>>> 각자 컴터에서 실행 될 수 있도록 *환경을 맞춘다

엔티티 모델 하나 (유저면 유저)  를 셋업한다

레포지토리(유저)  -  테스트 할 수 있게 하나씩

Test


깃 클로닝 -브랜치를 나눈다,    로컬브랜치(각자)



백과 프론트
백으로 바탕이 되어야 전달교육
프론트 미리 
도큐먼트 준비




7/23

* 오후에는 각 조별 진행사항 체크

프론트 두명정도 먼저 공부 하고 백앤드. sql 작업 마무리를 해야한다
>>>> entity 모델 검증 

@조인이 어려우면 일단 찢어서 놓는다
일단 구현이 중요 ( ~도 해보고 ~도 해보고 X)
공지사항
텀스 앤 컨디션
패스워드리셋
주문
결제
배송
상품상세
판매자정보,
각 판매자와의 소통..
관리자페이지
화면 페이지에 대한 목록이 나왔으면..

모임이슈는 소통, 커뮤니케이션 목적 주로
매일 매일 확인

마스터는 처음 만든거
깃 피처 에다가 디밸롭 합치는거. - 머지는 각자



7/29

각자 알아서 렌더링 하는 방식으로
>>>>>> 컴포넌트  기반으로 개발한다

API 붙이는건 나중에-

더미데이터로 화면을 먼저 만든다 > 컨테이너에서 
데이터 셋트만 딱 맞으면 


내일 오전 점검
오늘 한것 내일 할것

탬플릿 - 조각조각이니까 

대안은 부트스트랩 직접

컴포넌트 단위로 개발을 하는데
>>> 백앤드가 준비가 안돼서

컨피그 설정 하면 아티클 수정 가능




8/28

Git Repo
/SuperFarmAdmin


* 상품관리( 등록, 삭제, )  ~ 재고

* 통계 - 많이 팔린(년/월/일)  ,  조회수(count. 일단 기능x)
		상품 카테고리 별 조회,

* 고객관리(VIP ? coupon?  sale 적용?) 






